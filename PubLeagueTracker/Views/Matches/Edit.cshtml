@model PubLeagueTracker.Models.Match

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Match</h4>
<strong>TODOs:</strong>
<ol>
    <li>Build custom validator so that home and away team are not the same. - https://docs.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-2.2</li>
    <li>Need to be able to set scores</li>
    <li>Need to be able to change home team -- how does this logic work.</li>
    <li>User is <strong>NOT</strong> able to update league or season.</li>
    <li>User <strong>CAN</strong> update teams.</li>
</ol>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="MatchId" />
            <div class="form-group">
                <label asp-for="SeasonId" class="control-label"></label>
                <select asp-for="SeasonId" class="form-control" asp-items="ViewBag.SeasonId"></select>
                <span asp-validation-for="SeasonId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MatchDate" class="control-label"></label>
                <input asp-for="MatchDate" class="form-control" />
                <span asp-validation-for="MatchDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
