@model PubLeagueTracker.Models.Match

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Match</h4>
<strong>TODOs:</strong>
<ol>
    <li>Build custom validator so that home and away team are not the same. - https://docs.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-2.2</li>
</ol>
<hr />
<h4>Match Details</h4>
<form asp-action="Edit">
    <div class="row">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="MatchId" />
            <input type="hidden" asp-for="SeasonId" />
            <input type="hidden" asp-for="Season" />
            <div class="form-group">
                <label asp-for="Location" class="control-label"></label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MatchDate" class="control-label"></label>
                <input asp-for="MatchDate" class="form-control" />
                <span asp-validation-for="MatchDate" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        @for (var idx = 0; idx < Model.MatchDetail.Count; idx++)
        {
            <div class="col-md-4">
                <h4>@(idx == 0 ? "Home Team" : "Away Team")</h4>

                <div class="form-group">
                    <input type="hidden" asp-for="MatchDetail[idx].MatchDetailId" />
                    <input type="hidden" asp-for="MatchDetail[idx].MatchId" />
                    <input type="hidden" asp-for="MatchDetail[idx].IsHomeTeam" value="@(idx == 0 ? true : false)" />

                    <label asp-for="MatchDetail[idx].TeamId" class="control-label"></label>
                    <select class="form-control"
                            asp-for="MatchDetail[idx].TeamId"
                            asp-items="@(new SelectList(Model.Season.Teams, "TeamId", "Name", Model.MatchDetail[idx].TeamId))"></select>
                    <span asp-validation-for="MatchDetail" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MatchDetail[idx].Score" class="control-label"></label>
                    <input asp-for="MatchDetail[idx].Score" class="form-control" />
                </div>
            </div>
        }
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
